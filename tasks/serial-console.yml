---
- name: serial-console | Get contents of /proc/consoles
  ansible.builtin.slurp:
    src: /proc/consoles
  register: console_data
- name: serial-console | Configure system serial-over-lan
  when:
    - (console_data['content'] | b64decode) | regex_search('^ttyS(\\d+)', '\\1', multiline=True) is not none
    - (console_data['content'] | b64decode) | regex_search('^ttyS(\\d+)', '\\1', multiline=True) | length > 0

  block:
    - name: serial-console | Set serial Facts`
      ansible.builtin.set_fact:
        serial_tty_device: "{{ (console_data['content'] | b64decode) | regex_search('^ttyS(\\d+)', '\\1', multiline=True) | default([]) | first }}"

    - name: serial-console | Set console Facts`
      ansible.builtin.set_fact:
        console_tty_device: "{{ '1' if serial_tty_device == '0' else '0' }}"

    - name: serial-console | Echo Serial and Console devices
      ansible.builtin.debug:
        msg: |
          Serial Console: ttyS{{ serial_tty_device }}
          Console: tty{{ console_tty_device }}
        verbosity: 0

    - name: serial-console | Copy serial-getty systemd file
      ansible.builtin.copy:
        src: "{{ common_systemd_serial_getty_src }}"
        dest: "{{ common_systemd_serial_getty_dest }}"
        remote_src: true
        group: root
        owner: root
        mode: "0755"

    - name: serial-console | Enable serial tty service
      ansible.builtin.systemd:
        name: "{{ common_systemd_serial_getty_dest | basename }}"
        daemon_reload: true
        state: started
        enabled: true
