---

- name: create /var/run/sshd
  ansible.builtin.file:
    state: directory
    path: /var/run/sshd
    mode: 0755
  when:
    - ansible_os_family == "Debian"

- name: Copy sshd_config Template
  ansible.builtin.template:
    src: sshd_config.j2
    dest: /etc/ssh/sshd_config
    owner: root
    group: root
    mode: 0644
  notify: "restart_sshd"

- meta: flush_handlers

- name: Restart ssh server
  ansible.builtin.service:
    name: "{{ ssh_service }}"
    state: restarted
    enabled: true
  register: ssh_started
  when: sshd_require_restart | default(false)

- name: Verify the sshd service is listening
  ansible.builtin.wait_for:
    host: localhost
    port: 22
    delay: 5
  when: ssh_started is changed
  ignore_errors: true
  register: ssh_start_attempt

- name: Get ssh journald logs if service does not appear to be up
  ansible.builtin.shell: journalctl _SYSTEMD_INVOCATION_ID=`systemctl show -p InvocationID --value {{ ssh_service }}.service`
  register: ssh_journal
  when: ssh_start_attempt.failed | default(false)

- ansible.builtin.fail:
    msg: "{{ ssh_journal.stdout_lines }}"
  when: ssh_start_attempt.failed | default(false)

- name: Ensure root .ssh directory exists
  ansible.builtin.file:
    path: /root/.ssh
    state: directory
    owner: root
    group: root
    mode: 0700

- name: Generate root authorized_keys file
  ansible.builtin.template:
    src: root_authorized_keys.j2
    dest: /root/.ssh/authorized_keys
    owner: root
    group: root
    mode: 0600
    backup: true
  when:
    - ssh_users is defined
    - ssh_users|length > 0

- name: Change root password
  ansible.builtin.user:
    name: root
    password: "{{ root_password | password_hash(salt=root_password_salt) }}"
    update_password: always
  when:
    - root_password is defined and (root_password|length) >= 8
    - root_password_salt is defined and (root_password_salt|length) > 0
